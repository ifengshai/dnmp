version: "3"
services:
### nginx ##################################
  nginx:
    build:
      context: ./services/nginx
      args:
        NGINX_VERSION: nginx:${NGINX_VERSION}
        CONTAINER_PACKAGE_URL: ${CONTAINER_PACKAGE_URL}
        NGINX_INSTALL_APPS: ${NGINX_INSTALL_APPS}
    container_name: nginx
    ports:
      - "${NGINX_HTTP_HOST_PORT}:80"
      - "${NGINX_HTTPS_HOST_PORT}:443"
    volumes:
      - ${SOURCE_DIR}:/www/:rw
      - ${NGINX_SSL_CERTIFICATE_DIR}:/ssl:rw
      - ${NGINX_CONFD_DIR}:/etc/nginx/conf.d/:rw
      - ${NGINX_CONF_FILE}:/etc/nginx/nginx.conf:ro
      - ${NGINX_FASTCGI_PHP_CONF}:/etc/nginx/fastcgi-php.conf:ro
      - ${NGINX_FASTCGI_PARAMS}:/etc/nginx/fastcgi_params:ro
      - ${NGINX_LOG_DIR}:/var/log/nginx/:rw
    environment:
      TZ: "$TZ"
    restart: always
    networks:
      - default
### consul1.15 ##################################
  consul15:
    build:
      context: ./services/consul
      dockerfile: Dockerfile
    container_name: consul15
    volumes:
      - ${SOURCE_DIR}/consul:/consul/data/:rw
    ports:
      - 8500:8500
      - 8300:8300
      - 8301:8301
      - 8302:8302
      - 8600:8600
    networks:
      - default
### php80 ##################################
  php80:
    build:
      context: ./services/php80
      args:
        PHP_VERSION: php:${PHP80_VERSION}
        CONTAINER_PACKAGE_URL: ${CONTAINER_PACKAGE_URL}
        PHP_EXTENSIONS: ${PHP80_EXTENSIONS}
        TZ: "$TZ"
    container_name: php80
    expose:
      - 9501
    volumes:
      - ${SOURCE_DIR}:/www/:rw
      - ${PHP80_PHP_CONF_FILE}:/usr/local/etc/php/php.ini:ro
      - ${PHP80_FPM_CONF_FILE}:/usr/local/etc/php-fpm.d/www.conf:rw
      - ${PHP80_LOG_DIR}:/var/log/php
      - ${DATA_DIR}/composer:/tmp/composer
      - ${SUPERVISOR_LOG}:/var/log/supervisor/:rw
      - ${SUPERVISOR_CONFIG}:/etc/supervisor/conf.d/:rw
      - ${SUPERVISOR_CONF_FILE}:/etc/supervisor/supervisord.conf:ro
    #restart: always
    command:
     - /bin/sh
     - -c
     - |
        php-fpm -R
#    command:
#     - /bin/sh
#     - -c
#     - |
#        supervisord -n -c /etc/supervisor/supervisord.conf
    cap_add:
      - SYS_PTRACE
    networks:
      - default

### php74 ##################################
  php74:
    build:
      context: ./services/php74
      args:
        PHP_VERSION: php:${PHP74_VERSION}-fpm-alpine
        CONTAINER_PACKAGE_URL: ${CONTAINER_PACKAGE_URL}
        PHP_EXTENSIONS: ${PHP74_EXTENSIONS}
        TZ: "$TZ"
    container_name: php74
    expose:
      - 9501
    ports:
      - "9501:9501"
    volumes:
      - ${SOURCE_DIR}:/www/:rw
      - ${PHP74_PHP_CONF_FILE}:/usr/local/etc/php/php.ini:ro
      - ${PHP74_FPM_CONF_FILE}:/usr/local/etc/php-fpm.d/www.conf:rw
      - ${PHP74_LOG_DIR}:/var/log/php
      - ${DATA_DIR}/composer:/tmp/composer
    #restart: always
    command:
     - /bin/sh
     - -c
     - |
        php-fpm -R
    cap_add:
      - SYS_PTRACE
    networks:
      - default  

### php73 ##################################
  php73:
    build:
      context: ./services/php73
      args:
        PHP_VERSION: php:${PHP73_VERSION}-fpm-alpine
        CONTAINER_PACKAGE_URL: ${CONTAINER_PACKAGE_URL}
        PHP_EXTENSIONS: ${PHP73_EXTENSIONS}
        TZ: "$TZ"
    container_name: php73
    expose:
      - 9501
    volumes:
      - ${SOURCE_DIR}:/www/:rw
      - ${PHP73_PHP_CONF_FILE}:/usr/local/etc/php/php.ini:ro
      - ${PHP73_FPM_CONF_FILE}:/usr/local/etc/php-fpm.d/www.conf:rw
      - ${PHP73_LOG_DIR}:/var/log/php
      - ${DATA_DIR}/composer:/tmp/composer
    #restart: always
    command:
     - /bin/sh
     - -c
     - |
        php-fpm -R
    cap_add:
      - SYS_PTRACE
    networks:
      - default
      
### php56 ##################################
  php56:
    build:
      context: ./services/php56
      args:
        PHP_VERSION: php:${PHP56_VERSION}-fpm-alpine
        CONTAINER_PACKAGE_URL: ${CONTAINER_PACKAGE_URL}
        PHP_EXTENSIONS: ${PHP56_EXTENSIONS}
        TZ: "$TZ"
    container_name: php56
    expose:
      - 9501
    volumes:
      - ${SOURCE_DIR}:/www/:rw
      - ${PHP56_PHP_CONF_FILE}:/usr/local/etc/php/php.ini:ro
      - ${PHP56_FPM_CONF_FILE}:/usr/local/etc/php-fpm.d/www.conf:rw
      - ${PHP56_LOG_DIR}:/var/log/php
      - ${DATA_DIR}/composer:/tmp/composer
    #restart: always
    command:
     - /bin/sh
     - -c
     - |
        php-fpm -R
    cap_add:
      - SYS_PTRACE
    networks:
      - default

### mysql80 ##################################
  mysql80:
    image: mysql:${MYSQL80_VERSION}
    container_name: mysql80
    command: --default-authentication-plugin=mysql_native_password #解决外部无法访问
    ports:
      - "${MYSQL80_HOST_PORT}:3306"
    volumes:
      - ${MYSQL80_CONF_FILE}:/etc/mysql/conf.d/mysql.cnf:ro
      - ${DATA_DIR}/mysql80:/var/lib/mysql/:rw
    restart: always
    networks:
      - default
    environment:
      MYSQL_ROOT_PASSWORD: "${MYSQL80_ROOT_PASSWORD}"
      TZ: "$TZ"

### mysql57 ##################################
  mysql57:
    image: mysql:${MYSQL57_VERSION}
    container_name: mysql57
    command: --default-authentication-plugin=mysql_native_password #解决外部无法访问
    ports:
      - "${MYSQL57_HOST_PORT}:3306"
    volumes:
      - ${MYSQL57_CONF_FILE}:/etc/mysql/conf.d/mysql.cnf:ro
      - ${DATA_DIR}/mysql57:/var/lib/mysql/:rw
    #restart: always
    networks:
      - default
    environment:
      MYSQL_ROOT_PASSWORD: "${MYSQL57_ROOT_PASSWORD}"
      TZ: "$TZ"

### waline（第三方评论系统） ##################################
#执行sql：https://github.com/walinejs/waline/blob/main/assets/waline.sql
#参考文档：https://waline.js.org/
  waline:
    image: 'lizheming/waline'
    container_name: waline
    restart: always
    ports:
     - '8360:8360'
    environment:
     MYSQL_DB: "waline"
     MYSQL_USER: 'root'
     MYSQL_PASSWORD: "${MYSQL80_ROOT_PASSWORD}"
     MYSQL_HOST: 'mysql80'
     MYSQL_PORT: "${MYSQL80_HOST_PORT}"
     IPQPS: "30"  #ip发言频率
     SMTP_SERVICE: "QQ" #qq邮件通知
     SMTP_USER: "173748596@qq.com"
     SMTP_PASS: "pxiavxiaxdrkbgda"
     SMTP_SECURE: "SMTP"
     SITE_NAME: "fengsha.space"
     SITE_URL: "http://fengsha.space"
     AUTHOR_EMAIL: "ifengshai@foxmail.com"
### redis50 ##################################
  redis50:
    image: redis:${REDIS50_VERSION}
    container_name: redis50
    ports:
      - "${REDIS50_HOST_PORT}:6379"
    volumes:
      - ${REDIS50_CONF_FILE}:/etc/redis.conf:ro
      - ${DATA_DIR}/redis:/data/:rw
    #restart: always
    entrypoint: ["redis-server", "/etc/redis.conf"]
    environment:
      TZ: "$TZ"
    networks:
      - default

### node19 ##################################
  node19:
    build:
      context: ./services/node19
    container_name: node19
    working_dir: /home/node/blog
    command: npm config set registry https://registry.npm.taobao.org
    command: npm run dev
    volumes:
      - ${SOURCE_DIR}/node:/home/node/:rw
    ports:
      - 8080:8080
    networks:
      - default

### rabbitmq ##################################   
#  rabbitmq:
#    build:
#      context: ./services/rabbitmq
#      args:
#        RABBITMQ_VERSION: ${RABBITMQ_VERSION}
#        RABBITMQ_PLUGINS: ${RABBITMQ_PLUGINS}
#    container_name: rabbitmq
#    restart: always
#    ports:
#      - "${RABBITMQ_HOST_PORT_C}:5672"
#      - "${RABBITMQ_HOST_PORT_S}:15672"
#    environment:
#       TZ: "$TZ"
#       RABBITMQ_DEFAULT_USER: "${RABBITMQ_DEFAULT_USER}"
#       RABBITMQ_DEFAULT_PASS: "${RABBITMQ_DEFAULT_PASS}"
#    networks:
#          - default
          
#  memcached:
#    image: memcached:${MEMCACHED_VERSION}
#    container_name: memcached
#    ports:
#      - "${MEMCACHED_HOST_PORT}:11211"
#    environment:
#       MEMCACHED_CACHE_SIZE: "${MEMCACHED_CACHE_SIZE}"
#    networks:
#      - default



### supervisor ##################################
#  supervisor:
#    build:
#      context: ./services/supervisor
#      args:
#        ALPINE_VERSION: alpine:${ALPINE_VERSION}
#        TZ: "$TZ"
#        CONTAINER_PACKAGE_URL: ${CONTAINER_PACKAGE_URL}
#    container_name: supervisor
#    ports:
#      - "${SUPERVISOR_HOST_PORT_C}:9001"
#    volumes:
#      - ${SOURCE_DIR}:/www/:rw
#      - ${SUPERVISOR_LOG}:/var/log/supervisor/:rw
#      - ${SUPERVISOR_CONFIG}:/etc/supervisor/conf.d/:rw
#      - ${SUPERVISOR_CONF_FILE}:/etc/supervisor/supervisord.conf:ro
#    command:
#      - /bin/sh
#      - -c
#      - |
#        supervisord -n -c /etc/supervisor/supervisord.conf
#    #restart: always
#    cap_add:
#      - SYS_PTRACE
#    networks:
#      - default

### mongodb ##################################
#  mongodb:
#    image: mongo:${MONGODB_VERSION}
#    container_name: mongodb
#    environment:
#        MONGO_INITDB_ROOT_USERNAME: "${MONGODB_INITDB_ROOT_USERNAME}"
#        MONGO_INITDB_ROOT_PASSWORD: "${MONGODB_INITDB_ROOT_PASSWORD}"
#        TZ: "$TZ"
#    volumes:
#      - ${DATA_DIR}/mongo:/data/db:rw
#      - ${DATA_DIR}/mongo_key:/mongo:rw
#    ports:
#       - "${MONGODB_HOST_PORT}:27017"
#    networks:
#       - default
#    command:
#       --auth

### elasticsearch71 ##################################
#  elasticsearch:
#    build:
#      context: ./services/elasticsearch
#      args:
#        ELASTICSEARCH_VERSION: ${ELASTICSEARCH_VERSION}
#        ELASTICSEARCH_PLUGINS: ${ELASTICSEARCH_PLUGINS}
#    container_name: elasticsearch
#    environment:
#      - TZ=$TZ
#      - discovery.type=single-node
#      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
#    volumes:
#      - ${DATA_DIR}/esdata:/usr/share/elasticsearch/data
#      - ${ELASTICSEARCH_CONF_FILE}:/usr/share/elasticsearch/elasticsearch.yml
#    hostname: elasticsearch
#    restart: always
#    ports:
#      - "${ELASTICSEARCH_HOST_PORT_C}:9200"
#      - "${ELASTICSEARCH_HOST_PORT_S}:9300"

### kibana71 ##################################
#  kibana:
#    image: kibana:${KIBANA_VERSION}
#    container_name: kibana
#    environment:
#      TZ: "$TZ"
#      elasticsearch.hosts: http://elasticsearch:9200
#      I18N_LOCALE: "${KIBANA_I18N_LOCALE}"
#    hostname: kibana
#    depends_on:
#      - elasticsearch
#    restart: always
#    ports:
#      - "${KIBANA_HOST}:5601"

#  logstash:
#    image: logstash:${LOGSTASH_VERSION}
#    container_name: logstash
#    hostname: logstash
#    restart: always
#    depends_on:
#      - elasticsearch
#    environment:
#      TZ: "$TZ"
#    ports:
#      - "${LOGSTASH_HOST_PORT_C}:9600"
#      - "${LOGSTASH_HOST_PORT_S}:5044"



#  xwiki:
#    image: "xwiki:lts-mysql-tomcat"
#    container_name: xwiki-mysql-tomcat-web
#    #restart: always
#    depends_on:
#      - xwiki_mysqldb
#    ports:
#      - "8080:8080"
#    environment:
#      - DB_USER=xwiki
#      - DB_PASSWORD=xwiki
#      - DB_HOST=xwiki-mysql-db
#    volumes:
#      - ${DATA_DIR}/xwiki/xwiki_data/xwiki:/usr/local/xwiki
#    networks:
#      - bridge
#  xwiki_mysqldb:
#    image: "mysql:5.7"
#    container_name: xwiki-mysql-db
#    #restart: always
#    #ports:#不对外开放端口
#      #- "3308:3306"
#    volumes:
#      - ./services/xwiki/xwiki_mysql.cnf:/etc/mysql/conf.d/xwiki.cnf
#      - ./services/xwiki/xwiki_mysql_init.sql:/docker-entrypoint-initdb.d/init.sql
#      - ${DATA_DIR}/xwiki/xwiki_data/xwiki_mysql:/var/lib/mysql
#    environment:
#      - MYSQL_ROOT_PASSWORD=xwiki
#      - MYSQL_USER=xwiki
#      - MYSQL_PASSWORD=xwiki
#      - MYSQL_DATABASE=xwiki
#    networks:
#      - bridge

#  confluence:
#    image: atlassian/confluence:latest
#    container_name: confluence
#    #设置容器的权限为root
#    privileged: true
#    ports:
#      - "8090:8090"
#      - "8091:8091"
#    volumes:
#      - ${DATA_DIR}/confluence/confluence-data:/var/atlassian/application-data/confluence
#      - ./services/confluence/lib/mysql-connector-java-8.0.20.jar:/opt/atlassian/confluence/confluence/WEB-INF/lib/mysql-connector-java-8.0.20.jar
#    networks:
#      - traefik
networks:
  traefik:
    external: true
  bridge:
  default: